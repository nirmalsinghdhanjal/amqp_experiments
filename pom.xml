<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
         http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>qpid-activemq-gatling-test</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>QPid ActiveMQ Gatling Performance Tests</name>
    <description>Performance testing with Gatling using QPid JMS client over AMQP to ActiveMQ 6.1</description>

    <properties>
        <!-- Build Properties -->
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Component Versions -->
        <java.version>21</java.version>
        <scala.version>2.13.16</scala.version>
        <scala.binary.version>2.13</scala.binary.version>
        
        <!-- ActiveMQ Classic 6.1 (requires JDK 17+) -->
        <activemq.version>6.1.6</activemq.version>
        
        <!-- QPid JMS Client (using javax.jms version) -->
        <qpid-jms.version>1.13.0</qpid-jms.version>
        
        <!-- Gatling (using stable version compatible with Java 21) -->
        <gatling.version>3.13.1</gatling.version>
        <gatling-maven-plugin.version>4.9.6</gatling-maven-plugin.version>
        
        <!-- Netty Version Management (compatible with Gatling 3.13.1) -->
        <netty.version>4.1.100.Final</netty.version>
        
        <!-- Logging -->
        <slf4j.version>2.0.16</slf4j.version>
        <logback.version>1.5.15</logback.version>
        
        <!-- Testing -->
        <junit.version>5.11.4</junit.version>
        
        <!-- Maven Plugins -->
        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>
        <scala-maven-plugin.version>4.9.2</scala-maven-plugin.version>
    </properties>

    <!-- Dependency Management for Version Consistency -->
    <dependencyManagement>
        <dependencies>
            <!-- Netty BOM for consistent versions -->
            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-bom</artifactId>
                <version>${netty.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
            <!-- Direct Gatling version management -->
            <dependency>
                <groupId>io.gatling.highcharts</groupId>
                <artifactId>gatling-charts-highcharts</artifactId>
                <version>${gatling.version}</version>
            </dependency>
            
            <dependency>
                <groupId>io.gatling</groupId>
                <artifactId>gatling-test-framework</artifactId>
                <version>${gatling.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Scala Library -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <!-- ActiveMQ Classic 6.1 Components -->
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-broker</artifactId>
            <version>${activemq.version}</version>
        </dependency>
        
        <dependency>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activemq-client</artifactId>
            <version>${activemq.version}</version>
        </dependency>

        <!-- QPid JMS Client for AMQP 1.0 (Jakarta Messaging 3.1) -->
        <dependency>
            <groupId>org.apache.qpid</groupId>
            <artifactId>qpid-jms-client</artifactId>
            <version>${qpid-jms.version}</version>
        </dependency>

        <!-- Gatling Test Framework -->
        <dependency>
            <groupId>io.gatling.highcharts</groupId>
            <artifactId>gatling-charts-highcharts</artifactId>
            <version>${gatling.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>io.gatling</groupId>
            <artifactId>gatling-test-framework</artifactId>
            <version>${gatling.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Netty Dependencies (only if needed to resolve conflicts) -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>${netty.version}</version>
        </dependency>
        
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-epoll</artifactId>
            <classifier>linux-x86_64</classifier>
            <optional>true</optional>
        </dependency>
        
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-kqueue</artifactId>
            <classifier>osx-x86_64</classifier>
            <optional>true</optional>
        </dependency>

        <!-- JMS Wrapper for Legacy Compatibility (if needed) -->
        <dependency>
            <groupId>com.github.marschall</groupId>
            <artifactId>jakarta-jms-adapter</artifactId>
            <version>1.0.0</version>
            <scope>test</scope>
        </dependency>

        <!-- Logging Dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- JUnit 5 for Unit Tests -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Jakarta Messaging API (for reference) -->
        <dependency>
            <groupId>jakarta.jms</groupId>
            <artifactId>jakarta.jms-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- PostgreSQL JDBC Driver for database logging -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.4</version>
        </dependency>
    </dependencies>

    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        
        <plugins>
            <!-- Maven Compiler Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <!-- Scala Maven Plugin -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <args>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                        <arg>-unchecked</arg>
                        <arg>-language:postfixOps</arg>
                    </args>
                    <jvmArgs>
                        <jvmArg>-Xss8m</jvmArg>
                        <jvmArg>-Xmx1G</jvmArg>
                        <jvmArg>--enable-native-access=ALL-UNNAMED</jvmArg>
                        <jvmArg>--add-opens=java.base/java.nio=ALL-UNNAMED</jvmArg>
                        <jvmArg>--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</jvmArg>
                    </jvmArgs>
                </configuration>
            </plugin>

            <!-- Gatling Maven Plugin -->
            <plugin>
                <groupId>io.gatling</groupId>
                <artifactId>gatling-maven-plugin</artifactId>
                <version>${gatling-maven-plugin.version}</version>
                <configuration>
                    <runMultipleSimulations>false</runMultipleSimulations>
                    <simulationsFolder>src/test/scala</simulationsFolder>
                    <resourcesFolder>src/test/resources</resourcesFolder>
                    <resultsFolder>target/gatling</resultsFolder>
                    <includes>
                        <include>**/*Simulation.scala</include>
                    </includes>
                    <excludes>
                        <exclude>**/*BaseSimulation.scala</exclude>
                    </excludes>
                    <noReports>false</noReports>
                    <jvmArgs>
                        <jvmArg>-Xmx2G</jvmArg>
                        <jvmArg>-Xms1G</jvmArg>
                        <jvmArg>-Xss8m</jvmArg>
                        <jvmArg>-XX:+UseG1GC</jvmArg>
                        <jvmArg>-XX:MaxGCPauseMillis=100</jvmArg>
                        <jvmArg>-Dfile.encoding=UTF-8</jvmArg>
                        <jvmArg>--enable-native-access=ALL-UNNAMED</jvmArg>
                        <jvmArg>--add-opens=java.base/java.nio=ALL-UNNAMED</jvmArg>
                        <jvmArg>--add-opens=java.base/sun.nio.ch=ALL-UNNAMED</jvmArg>
                        <jvmArg>--add-opens=java.base/java.lang=ALL-UNNAMED</jvmArg>
                        <jvmArg>--add-opens=java.base/sun.misc=ALL-UNNAMED</jvmArg>
                        <jvmArg>-XX:+UnlockExperimentalVMOptions</jvmArg>
                        <jvmArg>-Djdk.incubator.foreign.Foreign=permit</jvmArg>
                    </jvmArgs>
                    <systemProperties>
                        <logback.configurationFile>logback-test.xml</logback.configurationFile>
                        <java.net.preferIPv4Stack>true</java.net.preferIPv4Stack>
                    </systemProperties>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Maven Surefire Plugin for Unit Tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Profiles for different environments -->
    <profiles>
        <!-- Development Profile -->
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <activemq.broker.url>amqp://localhost:5672</activemq.broker.url>
                <activemq.username>admin</activemq.username>
                <activemq.password>admin</activemq.password>
            </properties>
        </profile>

        <!-- Test Profile -->
        <profile>
            <id>test</id>
            <properties>
                <activemq.broker.url>amqp://test-server:5672</activemq.broker.url>
                <activemq.username>test</activemq.username>
                <activemq.password>test</activemq.password>
            </properties>
        </profile>

        <!-- Production Profile -->
        <profile>
            <id>prod</id>
            <properties>
                <activemq.broker.url>amqp://prod-server:5672</activemq.broker.url>
                <activemq.username>${env.ACTIVEMQ_USERNAME}</activemq.username>
                <activemq.password>${env.ACTIVEMQ_PASSWORD}</activemq.password>
            </properties>
        </profile>
    </profiles>

    <!-- Maven Repositories -->
    <repositories>
        <repository>
            <id>central</id>
            <name>Maven Central Repository</name>
            <url>https://repo1.maven.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>central</id>
            <name>Maven Plugin Repository</name>
            <url>https://repo1.maven.org/maven2</url>
            <layout>default</layout>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
        </pluginRepository>
    </pluginRepositories>
</project>